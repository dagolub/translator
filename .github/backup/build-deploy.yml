name: Build and Publish API

on:
  # run it on push to the default repository branch
  push:
    branches:
      - 'main'
      - 'production'
  # run it during pull request
  pull_request:
    branches:
      - 'main'
      - 'production'

jobs:
  # define job to build and publish docker image
  deploy-staging:
    name: STAGE
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest
    environment: stage
    if: ${{ github.ref == 'refs/heads/main' }}
    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is located
          context: .
          # Note: tags has to be all lower-case
          tags: | 
            ${{ secrets.REGISTRY_NAME }}:stage
          push: ${{ github.ref == 'refs/heads/main' }}

      # Install doctl.
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # Deploy to DigitalOCcean Kubernetes.
      - name: Update deployment file
        run: sed -i 's|<IMAGE>|${{ secrets.REGISTRY_NAME }}:stage|' $GITHUB_WORKSPACE/config/deployment.yml

      - name: Change domain in deployment file
        run: sed -i 's|<DOMAIN>|trade-stage.mongo.one|' $GITHUB_WORKSPACE/config/deployment.yml

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: Scale api service
        run: kubectl -n amlback scale deployment/trade --replicas=0

#      - name: Scale worker service
#        run: kubectl -n amlstage scale deployment/amlworker --replicas=0

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/config/deployment.yml

      - name: Verify deployment
        run: kubectl -n amlback rollout status deployment/trade

  deploy-production:
    name: PRODUCTION
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest
    environment: prod
    if: ${{ github.ref == 'refs/heads/production' }}
    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v3
        with:
          # relative path to the place where source code with Dockerfile is located
          context: .
          tags: | 
            ${{ secrets.REGISTRY_NAME }}:production
          push: ${{ github.ref == 'refs/heads/production' }}

      # Install doctl.
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # Deploy to DigitalOCcean Kubernetes.
      - name: Update deployment file
        run: sed -i 's|<IMAGE>|${{ secrets.REGISTRY_NAME }}:production|' $GITHUB_WORKSPACE/config/deployment.yml

      - name: Change domain in deployment file
        run: sed -i 's|<DOMAIN>|trade.amlnode.com|' $GITHUB_WORKSPACE/config/deployment.yml

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: Scale api service
        run: kubectl -n amlback scale deployment/trade --replicas=0

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/config/deployment.yml

      - name: Verify deployment
        run: kubectl -n amlback rollout status deployment/trade
